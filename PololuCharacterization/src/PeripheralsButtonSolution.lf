/**
 * Blink the default LED on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */

 target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    single-threaded: true
  }
  import Display from "lib/Display.lf"
  preamble {=
    #include <stdio.h>
    #include <pico/stdlib.h>
    #include <hardware/gpio.h>
  =}

/*reactor displayControl {
    d = new Display()
    input button_pressed: bool
     
  reaction(button_pressed) -> d.line0 {=
    /// TODO: define max string size for line
    /// based on font you can have 4 or 8 lines
    static char buf0[17];
    if (button_pressed) {
        snprintf(buf0, 17, "pressed");
        lf_set(d.line0, buf0);
    }
    else{
        snprintf(buf0, 17, "not pressed");
        lf_set(d.line0, buf0);
    }
    =}
}
    */

  main reactor {
    timer t(0, 250 ms)
    state button_pressed: bool = false
    d = new Display()
    //dc = new displayControl()
    //led_on -> dc.button_pressed
    
  
    reaction(startup) {=
      gpio_init(PICO_DEFAULT_LED_PIN);
      gpio_set_dir(PICO_DEFAULT_LED_PIN, GPIO_IN);
    =}
  
    reaction(t) -> d.line0 {=
      static char buf0[17];

      uint32_t mask = 1ul << PICO_DEFAULT_LED_PIN;
      if ((sio_hw->gpio_in & mask)) {
        snprintf(buf0, 17, "not pressed");
      }
      else {
        snprintf(buf0, 17, "pressed");
      }
      lf_set(d.line0, buf0);

    //   if(self->led_on) {
    //     *(&sio_hw->gpio_set) ^= mask;
    //   }
    //   else {
    //     *(&sio_hw->gpio_clr) ^= mask;
    //   }
    =}
  }